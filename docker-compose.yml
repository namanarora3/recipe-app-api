version: '3.9'
#docker compose typically consists of one or more servies, and app is one of our service here.
services:
  app:
    build:
      context: . #we want to vuild the dockerfile in the current directort(. means this)
      args:
        - DEV=true
    ports:
      - "8000:8000" #port 8000 on our local machine is mapped to port 8000 in docker container
    volumes:
      - ./app:/app #mapping system directory to /app in our container. this helps to sync the code automatically without having to rebuild the container(2-way repationship)
      - dev-static-data:/vol/web
    command: > #default command used to run the service, can be overwrititten by  specifying command when we do "docker-compose run"
      sh -c "python manage.py runserver 0.0.0.0:8000"
    environment:
      - DB_HOST=db #we can use the name of the service(db) as the hostname, thereby using db
      - DB_NAME=devdb
      - DB_USER=devuser
      - DB_PASS=changeme
    depends_on:
      - db

  db:
    image:
      postgres:13-alpine #leightweight version of image

    volumes:
      - dev-db-data:/var/lib/postgresql/data
    environment:
    #to set the initial databse config for our new db service
      - POSTGRES_DB=devdb
      - POSTGRES_USER=devuser
      - POSTGRES_PASSWORD=changeme
    #in case of actual deployment server, we shdnt be hardcoding user details in our code, for local dev we can do this

volumes:
  dev-db-data: #nothing is needed after colon, as docker will handle automatically, sotring it in the default location in file system
  dev-static-data:

